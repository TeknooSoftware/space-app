security:
    role_hierarchy:
        ROLE_ADMIN: 'ROLE_USER'
        ROLE_RECOVERY: ~

    providers:
        with_password:
            id: 'Teknoo\East\CommonBundle\Provider\PasswordAuthenticatedUserProvider'
        from_third_party:
            id: 'Teknoo\East\CommonBundle\Provider\ThirdPartyAuthenticatedUserProvider'
        with_recovery_access:
            id: 'Teknoo\East\CommonBundle\Provider\RecoveringAccessUserProvider'
        normals_providers:
            chain:
                providers: ['with_password', 'from_third_party']
        loginlinks_providers:
            chain:
                providers: ['with_recovery_access', 'with_password']
    password_hashers:
        Teknoo\East\CommonBundle\Object\PasswordAuthenticatedUser:
            algorithm: 'sodium'

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        #Admin area, allow anonymous for login
        account_login:
            pattern: '^/account/login$'
            security: false

        account_oauth_login:
            pattern: '^/account/oauth/login$'
            security: false

        api_area:
            provider: normals_providers
            pattern: '^/api'
            stateless: true
            jwt: ~

        #require admin role for all others pages
        account_area:
            pattern: '^/'
            custom_authenticators:
                - '%teknoo.east.common.bundle.security.authenticator.oauth2.class%'
            provider: normals_providers
            login_link:
                check_route: 'account_autologin'
                lifetime: 300
                login_path: 'account_login'
                max_uses: 1
                provider: 'loginlinks_providers'
                signature_properties: ['userIdentifier', 'hash']
                success_handler: 'Teknoo\Space\Infrastructures\Symfony\Security\Authentication\AuthenticationSuccessHandler'
            form_login:
                provider: 'with_password'
                check_path: 'account_check'
                login_path: 'account_login'
                default_target_path: 'space_dashboard'
                always_use_default_target_path: false
                use_referer: true
                enable_csrf: true
            remember_me:
                secret: '%env(APP_REMEMBER_SECRET)%'
                secure: true
                httponly: true
            logout:
                path: 'account_logout'
                target: 'space_dashboard'
            two_factor:
                auth_form_path: 2fa_login    # The route name you have used in the routes.yaml
                check_path: 2fa_login_check  # The route name you have used in the routes.yaml

    access_control:
        #Front : available for anyone
        - { path: '^/healthy', roles: [PUBLIC_ACCESS] }
        - { path: '^/build', roles: [PUBLIC_ACCESS], requires_channel: https }
        #Admin : require role admin
        - { path: '^/admin', roles: [ROLE_ADMIN], requires_channel: https }
        #Account recovery
        - {
            path: '^/account/user/access/recovery',
            roles: [PUBLIC_ACCESS, ~ROLE_RECOVERY],
            requires_channel: https,
            allow_if: "!is_authenticated()"
        }
        - { path: '^/my-settings/update-password', roles: [ROLE_USER, ROLE_RECOVERY], requires_channel: https }
        #Account subscription
        - {
            path: '^/account/subscription',
            roles: [PUBLIC_ACCESS, ~ROLE_RECOVERY],
            requires_channel: https,
            allow_if: "!is_authenticated()"
        }
        #Account : 2fa
        - { path: '^/2fa/auth', roles: [IS_AUTHENTICATED_2FA_IN_PROGRESS], requires_channel: https }
        #Api
        - { path: '^/api', roles: [IS_AUTHENTICATED_FULLY, ~ROLE_RECOVERY] }
        #Default
        - { path: '^/', roles: [ROLE_USER], requires_channel: https }

when@test:
    security:
        password_hashers:
            Teknoo\East\CommonBundle\Object\PasswordAuthenticatedUser:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
